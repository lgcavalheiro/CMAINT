#!/bin/sh

# === GLOBALS ===
ROOTDIR=$(pwd)
SRCDIR="src"
BUILDDIR="build"
PROJECTNAME="cmaint_project"
USE_GIT=0

# === FUNCS ===
create_folders() {
	[ ! -e $SRCDIR ] && mkdir -p $ROOTDIR/$SRCDIR
	[ ! -e $BUILDDIR ] && mkdir -p $ROOTDIR/$BUILDDIR
}

create_mainc() {
	[ ! -e $ROOTDIR/$SRCDIR/main.c ] && touch $ROOTDIR/$SRCDIR/main.c || : >$ROOTDIR/$SRCDIR/main.c
	sed -e "s/%ROOTDIR%/$ROOTDIR/g" main.template >>$ROOTDIR/$SRCDIR/main.c
}

create_cmakelists() {
	[ ! -e $ROOTDIR/CMakeLists.txt ] && touch $ROOTDIR/CMakeLists.txt || : >$ROOTDIR/CMakeLists.txt
	sed -e "s/%VERSION%/$(cmake --version | grep version | cut -d' ' -f3)/g" -e "s/%SRCDIR%/$SRCDIR/g" -e "s/%PROJECTNAME%/$PROJECTNAME/g" ./cmakelists.template >>$ROOTDIR/CMakeLists.txt
}

create_crun() {
	[ ! -e $ROOTDIR/crun.sh ] && touch $ROOTDIR/crun.sh || : >$ROOTDIR/crun.sh
	printf "#!/bin/sh\n\n" >>$ROOTDIR/crun.sh
	sed -e "s/%ROOTDIR%/$ROOTDIR/g" -e "s/%BUILDDIR%/$BUILDDIR/g" -e "s/%PROJECTNAME%/$PROJECTNAME/g" ./crun.template >>$ROOTDIR/crun.sh
	chmod 0755 $ROOTDIR/crun.sh
}

create_version_file() {
	echo "0.0.1" >>$ROOTDIR/build-number.txt
}

use_git() {
	[ ! -e $ROOTDIR/external ] && mkdir -p $ROOTDIR/external
	git init $ROOTDIR
}

print_help() {
	cat <<"EOF"
USAGE: cmaint <options>
-h			Display this message
-r <root_dir>		Overrides the root directory of the project (default is $PWD)
-p <project_name>	Overrides the project name (default is cmaint_project)
-b <build_dir>		Overrides the build folder of the project (default is build)
-s <src_dir>		Overrides the source folder of the project (default is src)
-g			Uses git and initializes the local repository at root directory of project
EOF
	exit 0
}

# === INIT ===
while getopts 's:b:p:r:hg' OPT; do
	case $OPT in
	s)
		SRCDIR=${OPTARG}
		;;
	b)
		BUILDDIR=${OPTARG}
		;;
	p)
		PROJECTNAME=${OPTARG}
		;;
	h)
		print_help
		;;
	r)
		ROOTDIR=${OPTARG}
		;;
	g)
		USE_GIT=1
		;;
	?)
		printf "No matching option found or arguments were not provided. Aborting...\n\n" && print_help
		;;
	esac
done

# === MAIN ===
create_folders
create_mainc
create_cmakelists
create_crun
create_version_file
[ $USE_GIT -eq 1 ] && use_git

